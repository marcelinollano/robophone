#!/usr/bin/env ruby

require 'cgi'
require 'optparse'
require 'rubygems'
require 'twilio-ruby'
require 'sequel'
require 'sqlite3'
require 'phonelib'
require 'curb'
require 'dotenv'
Dotenv.load

require './db.rb'

opts = {}
OptionParser.new do |opt|
  opt.on('--id ID') { |o| opts[:id] = o }
end.parse!

def query(request)
  call  = @client.calls.list.first {|call| call.sid == request.sid}
  @call.update(:status => call.status)
  ping(@call.id)
  return(call)
end

def ping(id)
  params = 'message={"channel":"/stories/'+id.to_s+'","data": ""}'
  Curl.post("#{ENV['APP_URL']}/faye", params)
end

def report(request)
  call = query(request)
  recordings = @client.recordings.list(call_sid: call.sid)
  recording  = @client.recordings(recordings[0].sid).fetch
  api_url    = 'https://api.twilio.com'
  recording  = api_url + recording.uri.sub!('.json', '.wav')
  @call.update({
    :duration => call.duration,
    :recording => recording,
    :status => call.status
  })
  ping(@call.id)
end

@story      = Story.first(:id => opts[:id])
@call       = @story.calls.first
text        = CGI.escape(@story.text)
language    = @story.language ||= ENV['DEFAULT_LANGUAGE']
record_time = @story.record_time ||= ENV['DEFAULT_RECORD_TIME']

url      = "#{ENV['APP_URL']}/voice.xml?token=#{ENV['APP_TOKEN']}&record_time=#{record_time}&language=#{language}&text=#{text}"
params   = { :url => url, :from => @story.phone, :to => @call.contact.phone }
@client = Twilio::REST::Client.new(ENV['TWILIO_ACCOUNT_SID'], ENV['TWILIO_AUTH_TOKEN'])
request = @client.calls.create(params)

loop do
  call = query(request)
  break if (call.status == 'completed')
end

report(request)
